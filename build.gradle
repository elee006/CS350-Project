plugins {
    id 'java'
    id 'application'
	id "org.xbib.gradle.plugin.git" version "2.0.0"
}

java {
    sourceCompatibility = JavaVersion.toVersion(11)
    targetCompatibility = JavaVersion.toVersion(11)
}

repositories {
    jcenter()
}


dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.0'
    testImplementation 'org.hamcrest:hamcrest-library:2.2'
}

test {
    ignoreFailures = true
    useJUnitPlatform()
}

mainClassName = 'edu.odu.cs.cs350.PropertiesFile'

//Following taken from https://www.cs.odu.edu/~zeil/cs350/latest/Public/websiteDeployment/index.html

javadoc {              
   failOnError = false;
}

task reports (dependsOn: ['javadoc', 'test']) {
	description 'Generate reports for the project website'
}

task clonePages() {                                             
    doLast {
        mkdir 'build/gh-pages'
        def thisRepo = rootProject.projectDir.toString()
        def pagesDir = "$buildDir/gh-pages"
        project.delete {
            delete pagesDir
        }
        def grgit = git.clone {
            dir = pagesDir
            uri = 'file:' + thisRepo
            bare = false
            refToCheckout = 'gh-pages'
        }
        grgit.checkout {
			branch = 'gh-pages'
		}
    }
}

task copyDocs (type: Copy, dependsOn: ['reports', 'clonePages']) {
    from "$buildDir/docs"
    into "$buildDir/gh-pages"
}
task copyReports (type: Copy, dependsOn: ['reports', 'clonePages']) {
    from "$buildDir/reports"
    into "$buildDir/gh-pages"
}

task deployReports (dependsOn: 'clonePages') {
	group = "Reporting"
    description  'Copies reports to the gh-pages branch in preparation for a future push to GitHub'
    doLast {
        def pagesDir = "$buildDir/gh-pages"
        def grgit = git.open {
            dir = pagesDir + "/.git"
        }
        grgit.add (update: false, patterns: ['reports/'])
        grgit.add (update: true, patterns: ['reports/'])
		grgit.add (update: false, patterns: ['docs/'])
        grgit.add (update: true, patterns: ['docs/'])
        grgit.commit {
            message = "Updating web pages"
        }
        grgit.push{}
    }
}
